<Window x:Class="recharge_system.View.HomePage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:recharge_system.View"
        xmlns:com="clr-namespace:recharge_system.Common"
        xmlns:vm="clr-namespace:recharge_system.ViewModel"
        mc:Ignorable="d"
        AllowsTransparency="True"
        WindowStyle="None"
        WindowState="Normal"
        x:Name="homePage"
        StateChanged="homePage_StateChanged"
        Background="Transparent"
        Title="HomePage" Height="450" Width="960"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Effect>
        <DropShadowEffect BlurRadius="3" ShadowDepth="0.8" Direction="270" ></DropShadowEffect>
    </Window.Effect>
    <Window.Resources>
        <com:ProcessConvert x:Key="processConvert"></com:ProcessConvert>
        <Style x:Key="winstateBtnStyle" TargetType="Button">
            <Setter Property="Template">
                <Setter.Value >
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="back" Background="Transparent"   CornerRadius="3" BorderThickness="0" >
                            <TextBlock x:Name="txt" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" FontFamily="../Assets/iconfont/#iconfont" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentPresenter x:Name="contentPresenter"/>
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="back" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger SourceName="txt" Property="Text" Value="&#xe8ee;"></Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="expanderBtnStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Width="18" Height="18" BorderThickness="1" CornerRadius="5" BorderBrush="Black"></Border>
                            <TextBlock x:Name="txt" Text="&#xe74c;" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="../Assets/iconfont/#iconfont" ></TextBlock>
                            <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="True"></ContentPresenter>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="txt"  Property="Text" Value="&#xe8a4;"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="expanderMenuStyle" TargetType="MenuItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="MenuItem">
                        <Border Height="20" x:Name="back" Background="Transparent" CornerRadius="5" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="15"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter ContentSource="Icon" Margin="3,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"></ContentPresenter>
                                <ContentPresenter Grid.Column="1" Margin="5,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  ContentSource="Header"></ContentPresenter>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" >
                                <Setter TargetName="back" Property="Background" Value="LightGray"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="back" Property="Background" Value="LightSlateGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="expanderStyle" TargetType="Expander">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander">
                        <DockPanel>
                            <ToggleButton DockPanel.Dock="Top" Margin="1"  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource expanderBtnStyle}" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}"></ToggleButton>
                            <ContentPresenter x:Name="expanderPresenter" DockPanel.Dock="Bottom" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed">
                            </ContentPresenter>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="expanderPresenter"  Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.DataContext >
        <vm:HomePageVM >
            
        </vm:HomePageVM>
    </Window.DataContext>
    <Border Background="WhiteSmoke" CornerRadius="5" Margin="5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="30"></RowDefinition>
            </Grid.RowDefinitions>
            <Border Grid.Row="0" Background="WhiteSmoke" CornerRadius="5,5,0,0" BorderThickness="0,0,0,1" BorderBrush="LightGray" >
                <Border.InputBindings>
                    <MouseBinding Command="{Binding PageDragMove}" CommandParameter="{Binding ElementName=homePage}" MouseAction="LeftClick"/>
                </Border.InputBindings>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="0.3*"></ColumnDefinition>
                        <ColumnDefinition Width="0.4*"></ColumnDefinition>
                        <ColumnDefinition Width="0.3*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5">
                        <Border Width="25" Height="25" CornerRadius="15" Background="LightGreen">
                            <TextBlock Text="New" VerticalAlignment="Center"></TextBlock>
                        </Border>
                    </StackPanel>
                    <Button Grid.Column="1" Command="NavigationCommands.BrowseBack" CommandTarget="{Binding ElementName=frame}"  Width="20" Height="20" Content="B" HorizontalAlignment="Left"></Button>
                    <StackPanel Orientation="Horizontal" Grid.Column="2" HorizontalAlignment="Right">
                        <Button Style="{StaticResource winstateBtnStyle}" Command="{Binding PageMinimized}" CommandParameter="{Binding ElementName=homePage}" Width="20" Height="20" Content="&#xe8a2;" Margin="5,5,10,5">
                        </Button>
                        <Button Style="{StaticResource winstateBtnStyle}" x:Name="maxBtn" Command="{Binding PageMaximized}" CommandParameter="{Binding ElementName=homePage}"  Width="20" Height="20" Content="&#xe8ee;" Margin="0,5,10,5">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup Name="MaxBtnStates">
                                    <VisualState Name="Maximized">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="maxBtn" Storyboard.TargetProperty="Content">
                                                <DiscreteObjectKeyFrame Value="&#xe8c2;" KeyTime="0" ></DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState Name="Normal">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="maxBtn" Storyboard.TargetProperty="Content">
                                                <DiscreteObjectKeyFrame Value="&#xe8ee;" KeyTime="0" ></DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="Maximized" GeneratedDuration="0"/>
                                        <VisualTransition To="Normal" GeneratedDuration="0"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Button>

                        <Button Style="{StaticResource winstateBtnStyle}" Command="{Binding PageClose}" CommandParameter="{Binding ElementName=homePage}" Width="20" Height="20" Content="&#xe75e;" Margin="0,5,10,5">
                        </Button>
                    </StackPanel>
                </Grid>

            </Border>
            <Border Grid.Row="1" BorderThickness="0,0,0,1" BorderBrush="LightGray">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="30*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="70*"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Orientation="Vertical">
                        <Expander Style="{StaticResource expanderStyle}" Header="菜单" ExpandDirection="Down" IsExpanded="True">
                            <StackPanel Margin="10,5,5,5" >
                                <ItemsControl>
                                    <MenuItem Style="{StaticResource expanderMenuStyle}" Click="MenuItem_Click"  VerticalContentAlignment="Center" Icon="&#xe787;" FontFamily="../Assets/iconfont/#iconfont" Header="设备列表"/>
                                    <MenuItem Style="{StaticResource expanderMenuStyle}" Click="MenuItem_Click_1" VerticalContentAlignment="Center" Icon="&#xe7f5;" FontFamily="../Assets/iconfont/#iconfont" Header="设置"/>
                                    <MenuItem Style="{StaticResource expanderMenuStyle}" Command="{Binding OpenSocketTestPage}" CommandParameter="{Binding ElementName=frame}" VerticalContentAlignment="Center" Icon="&#xe76a;" FontFamily="../Assets/iconfont/#iconfont" Header="Socket Test"></MenuItem>
                                    <MenuItem Style="{StaticResource expanderMenuStyle}" Click="MenuItem_Click_2" VerticalContentAlignment="Center" Icon="&#xe7f5;" FontFamily="../Assets/iconfont/#iconfont" Header="Observable"/>
                                    <MenuItem Style="{StaticResource expanderMenuStyle}" Click="MenuItem_Click_3" VerticalContentAlignment="Center" Icon="&#xe7f5;" FontFamily="../Assets/iconfont/#iconfont" Header="Lili3"/>
                                </ItemsControl>
                            </StackPanel>
                        </Expander>
                    </StackPanel>
                    <GridSplitter Grid.Column="1" Width="1" ShowsPreview="True" Background="LightGray" HorizontalAlignment="Stretch"></GridSplitter>
                    <StackPanel Grid.Column="2" Margin="2">
                        <Frame x:Name="frame" Source="../View/MainContainerPage.xaml" JournalOwnership="OwnsJournal" NavigationUIVisibility="Hidden">
                        </Frame>
                    </StackPanel>
                </Grid>
            </Border>
            <StackPanel Grid.Row="2" Orientation="Horizontal">
                <MediaElement Source="https://music.163.com/song/media/outer/url?id=350909.mp3" LoadedBehavior="Manual" Name="myMediaElement"  UnloadedBehavior="Stop" Stretch="Fill" 
     MediaOpened="Element_MediaOpened" MediaEnded="Element_MediaEnded"></MediaElement>
                <!-- Play button. -->
                <Button Content="play" x:Name="PlayButton" Click="OnMouseDownPlayMedia" Margin="5" />

                <!-- Pause button. -->
                <Button Content="Pause" Click="OnMouseDownPauseMedia" Margin="5" />

                <!-- Stop button. -->
                <Button Content="Stop" Click="OnMouseDownStopMedia" Margin="5" />

                <!-- Volume slider. This slider allows a Volume range between 0 and 1. -->
                <TextBlock Foreground="Black" VerticalAlignment="Center" Margin="5"  >Volume</TextBlock>
                <Slider Name="volumeSlider" VerticalAlignment="Center" ValueChanged="ChangeMediaVolume" 
       Minimum="0" Maximum="1" Value="0.5" Width="70"/>

                <!-- Volume slider. This slider allows you to change the speed of the media playback. -->
                <TextBlock Foreground="Black" Margin="5"  VerticalAlignment="Center">Speed</TextBlock>
                <Slider Name="speedRatioSlider" Minimum="1" Maximum="2" VerticalAlignment="Center" ValueChanged="ChangeMediaSpeedRatio" 
       Value="1" Width="70" />

                <!-- Seek to slider. Ths slider allows you to jump to different parts of the media playback. -->
                <TextBlock Foreground="Black" Margin="5"  VerticalAlignment="Center">Seek To</TextBlock>
                <Slider Name="timelineSlider" Margin="5" Minimum="0" Maximum="100" Value="{Binding ElementName=myMediaElement,Path=Position,Converter={StaticResource processConvert},Mode=TwoWay}" Width="300"/>
                <TextBlock Text="测试" VerticalAlignment="Center" Margin="5"></TextBlock>

            </StackPanel>

        </Grid>
    </Border>
</Window>
